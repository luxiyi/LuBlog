<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://code.alibabatech.com/schema/dubbo
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <dubbo:application name="provider"/>
    <!-- 注册中心的ip地址 -->
    <dubbo:registry address="zookeeper://116.62.180.224:2181" timeout="60000"/>
    <!-- use dubbo protocol to export service on port 20880 -->
    <dubbo:protocol name="dubbo" port="20881"/>
    <!--如果你的服务需要Warmup时间，比如初始化缓存，等待相关资源就位等，可以使用delay进行延迟暴露。-->
    <dubbo:provider delay="-1" timeout="12000" retries="0"/>
    <!-- 使用xml配置方式申明暴露一个接口服务，在程序启动的时候会自动注册到zookeeper。
         等同于在类上打@service注解，打了注解就必须要用annotation指定启动扫描路径，使用这种方式，就不需要指定annotation了-->
    <dubbo:service interface="com.lublog.service.BlogService" ref="blogService"/>
    <dubbo:service interface="com.lublog.service.CommentService" ref="commentService"/>
    <dubbo:service interface="com.lublog.service.UserService" ref="userService"/>
    <dubbo:service interface="com.lublog.service.TagService" ref="tagService"/>
    <dubbo:service interface="com.lublog.service.CategoryService" ref="categoryService"/>
    <dubbo:service interface="com.lublog.service.PlanService" ref="planService"/>
    <dubbo:service interface="com.lublog.service.RoleService" ref="roleService"/>
    <dubbo:service interface="com.lublog.service.PlanVisitorService" ref="planVisitorService"/>
    <dubbo:service interface="com.lublog.service.QuestionService" ref="questionService"/>
    <dubbo:service interface="com.lublog.service.ProfileService" ref="profileService"/>
    <dubbo:service interface="com.lublog.service.StatisticsService" ref="statisticsService"/>
    <!-- 服务实现，与普通的本地bean一样-->
    <bean id="blogService" class="com.lublog.provider.serviceimpl.BlogServiceImpl"/>
    <bean id="commentService" class="com.lublog.provider.serviceimpl.CommentServiceImpl"/>
    <bean id="userService" class="com.lublog.provider.serviceimpl.UserServiceImpl"/>
    <bean id="tagService" class="com.lublog.provider.serviceimpl.TagServiceImpl"/>
    <bean id="categoryService" class="com.lublog.provider.serviceimpl.CategoryServiceImpl"/>
    <bean id="planService" class="com.lublog.provider.serviceimpl.PlanServiceImpl"/>
    <bean id="roleService" class="com.lublog.provider.serviceimpl.RoleServiceImpl"/>
    <bean id="planVisitorService" class="com.lublog.provider.serviceimpl.PlanVisitorServiceImpl"/>
    <bean id="questionService" class="com.lublog.provider.serviceimpl.QuestionServiceImpl"/>
    <bean id="profileService" class="com.lublog.provider.serviceimpl.ProfileServiceImpl"/>
    <bean id="statisticsService" class="com.lublog.provider.serviceimpl.StatisticsServiceImpl"/>
</beans>